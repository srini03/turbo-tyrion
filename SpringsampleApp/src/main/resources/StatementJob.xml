<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:util="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                 http://www.springframework.org/schema/util
                                 http://www.springframework.org/schema/util/spring-util.xsd
                                 http://www.springframework.org/schema/batch
                                 http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">
    <beans:import resource="launch-context.xml"/>


    <beans:bean id="customerTransactionFile" class="org.springframework.core.io.FileSystemResource">
        <beans:constructor-arg value="/input/customerTransaction.csv"/>
    </beans:bean>

    <beans:bean id="customerLineTokenizer"
                class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <beans:property name="names"
                        value="taxId,firstName,lastName,address,city,state,zip,accountNumber"/>
        <beans:property name="delimiter" value=","/>
    </beans:bean>

    <beans:bean id="transactionLineTokenizer"
                class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <beans:property name="names" value="accountNumber,stockTicker,price,quantity,timestamp"/>
        <beans:property name="delimiter" value=","/>
    </beans:bean>

    <beans:bean id="customerFieldSetMapper"
                class="com.apress.springbatch.statement.reader.CustomerFieldSetMapper"/>

    <beans:bean id="transactionFieldSetMapper"
                class="com.apress.springbatch.statement.reader.TransactionFieldSetMapper"/>

    <beans:bean id="customerTransactionLineMapper"
                class="com.apress.springbatch.statement.reader.RegularExpressionLineMapper">
        <beans:property name="lineTokenizers">
            <beans:map>
                <beans:entry key="^\d+,[A-Z][a-zA-Z]+,[A-Z][a-zA-Z]+,.*"
                             value-ref="customerLineTokenizer"/>
                <beans:entry key="^\d+,[A-Z\.\ ]+,\d+.*"
                             value-ref="transactionLineTokenizer"/>
            </beans:map>
        </beans:property>
        <beans:property name="fieldSetMappers">
            <beans:map>
                <beans:entry key="^\d+,[A-Z][a-zA-Z]+,[A-Z][a-zA-Z]+,.*"
                             value-ref="customerFieldSetMapper"/>
                <beans:entry key="^\d+,[A-Z\.\ ]+,\d+.*"
                             value-ref="transactionFieldSetMapper"/>
            </beans:map>
        </beans:property>

    </beans:bean>

    <beans:bean id="customerTransactionReader"
                class="org.springframework.batch.item.file.FlatFileItemReader">
        <beans:property name="resource" ref="customerTransactionFile"/>
        <beans:property name="lineMapper" ref="customerTransactionLineMapper"/>
    </beans:bean>

    <step id="importCustomerAndTransactionData">
        <tasklet>
            <chunk reader="customerTransactionReader" processor="customerLookupItemProcessor"
                   writer="customerTransactionItemWriter" commit-interval="100"/>
        </tasklet>
    </step>

    <job id="statementJob">
        <step id="step1" parent="importCustomerAndTransactionData"/>
    </job>

</beans:beans>
